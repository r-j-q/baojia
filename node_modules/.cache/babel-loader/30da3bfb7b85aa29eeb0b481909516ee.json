{"remainingRequest":"/Users/wangyanli/Documents/a/y/addVue/node_modules/babel-loader/lib/index.js!/Users/wangyanli/Documents/a/y/addVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangyanli/Documents/a/y/addVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangyanli/Documents/a/y/addVue/src/pages/permission/role-manage/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangyanli/Documents/a/y/addVue/src/pages/permission/role-manage/index.vue","mtime":1684630200000},{"path":"/Users/wangyanli/Documents/a/y/addVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangyanli/Documents/a/y/addVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wangyanli/Documents/a/y/addVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangyanli/Documents/a/y/addVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\nimport _toConsumableArray from \"/Users/wangyanli/Documents/a/y/addVue/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.map\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getRoleList, getAllPermissiion } from '@/api/permission';\nexport default {\n  data: function data() {\n    return {\n      form: {\n        roleName: '',\n        status: '',\n        roleCode: ''\n      },\n      dialogFormVisible: false,\n      dialogSize: 'large',\n      totalRecord: 0,\n      pageSize: 10,\n      pageNumber: 1,\n      dialogVisible: false,\n      dialogTitle: '新增角色并授权',\n      defaultTreeProps: {\n        children: 'erpMemberPermissions',\n        label: 'permissionName'\n      },\n      rules: {\n        roleName: [{\n          required: true,\n          message: '角色名称不能为空',\n          trigger: 'blur'\n        }]\n      },\n      searchData: {\n        roleName: ''\n      },\n      roleForm: {\n        id: '',\n        roleName: '',\n        permissions: '',\n        roleCode: '',\n        roleType: '',\n        status: ''\n      },\n      roleTree: [],\n      tableData: []\n    };\n  },\n  created: function created() {\n    this.loadData();\n    this.onSearch();\n  },\n  methods: {\n    doAdd: function doAdd() {\n      if (!this.form.roleName || !this.form.status || !this.form.roleCode) {\n        this.$message.error('请填充信息后再提交!');\n        return;\n      }\n\n      var formData = new FormData();\n      formData.append('roleName', this.form.roleName);\n      formData.append('status', this.form.status);\n      formData.append('roleCode', this.form.roleCode);\n    },\n    getTreeIndexByRootRoleId: function getTreeIndexByRootRoleId(id) {\n      var index;\n      var len = this.roleTree.length;\n\n      for (index = 0; index < len; index++) {\n        if (this.roleTree[index].id === id) {\n          return index;\n        }\n      }\n    },\n    getRootRoleIdByRoleId: function getRootRoleIdByRoleId(id) {\n      for (var i = 0; i < this.roleTree.length; i++) {\n        var roles = this.roleTree[i];\n        var hasRole = this.getRole(roles.erpMemberPermissions, id);\n\n        if (hasRole) {\n          return roles.id;\n        }\n      }\n    },\n    getRole: function getRole(roles, id) {\n      var hasRole;\n\n      if (!roles) {\n        return;\n      }\n\n      for (var i = 0; i < roles.length; i++) {\n        var role = roles[i];\n\n        if (role.id === id) {\n          hasRole = true;\n          break;\n        } else if (role.erpMemberPermissions) {\n          hasRole = this.getRole(role.erpMemberPermissions, id);\n\n          if (hasRole) {\n            break;\n          }\n        }\n      }\n\n      return hasRole;\n    },\n    isLeaf: function isLeaf(id) {\n      var isLeaf;\n\n      for (var i = 0; i < this.roleTree.length; i++) {\n        var roles = this.roleTree[i];\n        this.isLeafByRoleId(roles, id, function () {\n          isLeaf = true;\n        });\n\n        if (isLeaf) {\n          return true;\n        }\n      }\n    },\n    isLeafByRoleId: function isLeafByRoleId(roles, id, fn) {\n      var _this = this;\n\n      if (roles.id === id) {\n        if (roles.judge) {\n          fn();\n        }\n\n        if (!roles.erpMemberPermissions && roles.parentId !== 0) {\n          fn();\n        }\n      } else if (roles.erpMemberPermissions) {\n        roles.erpMemberPermissions.map(function (role) {\n          _this.isLeafByRoleId(role, id, fn);\n        });\n      }\n    },\n    loadData: function loadData() {\n      var _this2 = this;\n\n      getAllPermissiion().then(function (res) {\n        _this2.roleTree = res;\n\n        _this2.roleTree.forEach(function (item, index) {\n          if (item.erpMemberPermissions) {\n            item.erpMemberPermissions.forEach(function (items, indexs) {\n              if (item.erpMemberPermissions[indexs] && item.erpMemberPermissions[indexs].erpMemberPermissions && item.erpMemberPermissions[indexs].erpMemberPermissions.length === 0) {\n                _this2.roleTree[index].erpMemberPermissions[indexs].judge = true;\n              }\n            });\n          }\n        });\n      });\n    },\n    onDialogClose: function onDialogClose() {//   this.$refs.roleForm.resetFields();\n      //   if(this.$refs.tree) {\n      //     for(let tree of this.$refs.tree) {\n      //       tree.setCheckedKeys([]);\n      //     }\n      //   }\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.pageSize = val;\n      this.onSearch();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.onSearch({\n        pageNumber: val\n      });\n    },\n    handleReset: function handleReset() {\n      this.searchData = {\n        roleName: ''\n      };\n      this.onSearch();\n    },\n    onSearch: function onSearch() {\n      var _this3 = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$pageNumber = _ref.pageNumber,\n          pageNumber = _ref$pageNumber === void 0 ? 1 : _ref$pageNumber;\n\n      getRoleList().then(function (res) {\n        _this3.tableData = res || [];\n      });\n    },\n    permListFormatter: function permListFormatter(row, column, cellValue) {\n      var str = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = cellValue[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          str.push(item.permissionName);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return str.join('，');\n    },\n    handleDelete: function handleDelete(index, row) {\n      this.$confirm('确认删除该角色?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {});\n    },\n    handlePower: function handlePower(index, row) {\n      var _this4 = this;\n\n      this.dialogSize = 'large';\n      var keys = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\n      this.roleForm.id = row.id;\n      row.erpMemberPermissions.map(function (role) {\n        var id, rootRoleId, treeIndex;\n\n        if (_this4.isLeaf(role.id)) {\n          id = role.id;\n          rootRoleId = _this4.getRootRoleIdByRoleId(id);\n          treeIndex = _this4.getTreeIndexByRootRoleId(rootRoleId);\n          keys[treeIndex].push(id);\n        }\n      }); //   console.log(keys)\n\n      setTimeout(function () {\n        var trees = _this4.$refs.tree;\n        trees.map(function (tree, index) {\n          tree.setCheckedKeys(keys[index]);\n        });\n      });\n      this.dialogVisible = true;\n      this.dialogTitle = '角色授权';\n    },\n    handleEditRoleName: function handleEditRoleName(index, row) {\n      this.dialogSize = 'tiny';\n\n      for (var _i = 0, _Object$keys = Object.keys(this.roleForm); _i < _Object$keys.length; _i++) {\n        var x = _Object$keys[_i];\n        this.roleForm[x] = row[x];\n      }\n\n      this.roleForm.status = String(this.roleForm.status);\n      this.dialogVisible = true;\n      this.dialogTitle = '修改角色名称';\n    },\n    onAddSubmit: function onAddSubmit() {\n      var _this5 = this;\n\n      this.getPermissions();\n      var permissions = this.roleForm.permissions;\n      this.$refs.roleForm.validate(function (valid) {\n        if (valid) {\n          if (!permissions) {\n            _this5.$message({\n              showClose: true,\n              message: '请选择权限',\n              type: 'warning'\n            });\n\n            return false;\n          }\n        }\n      });\n    },\n    onEditSubmit: function onEditSubmit() {\n      var _this6 = this;\n\n      this.$refs.roleForm.validate(function (valid) {\n        if (valid) {\n          var formData = new URLSearchParams();\n          formData.append('roleName', _this6.roleForm.roleName);\n          formData.append('id', _this6.roleForm.id);\n          formData.append('roleCode', _this6.roleForm.roleCode);\n          formData.append('status', _this6.roleForm.status);\n        }\n      });\n    },\n    onEditRoleSubmit: function onEditRoleSubmit() {\n      var _this7 = this;\n\n      this.getPermissions();\n      var permissions = this.roleForm.permissions;\n      this.$refs.roleForm.validate(function (valid) {\n        if (valid) {\n          if (!permissions) {\n            _this7.$message({\n              showClose: true,\n              message: '请选择权限',\n              type: 'warning'\n            });\n\n            return;\n          }\n\n          var formData = new URLSearchParams();\n\n          _this7.roleForm.permissions.split(',').forEach(function (element) {\n            formData.append('permissionIds', element);\n          });\n        }\n      });\n    },\n    getPermissions: function getPermissions() {\n      var set = new Set();\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.$refs.tree[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var tree = _step2.value;\n          // 对选中的节点进行处理\n          var nodes = tree.getCheckedNodes();\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = nodes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var node = _step3.value;\n              var id = node.id,\n                  parentId = node.parentId;\n              set.add(id);\n              set.add(parentId);\n            } // 对半选中状态的节点进行处理\n\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          var nodesDOM = tree.$el.querySelectorAll('.el-tree-node');\n          var nodesVue = [].map.call(nodesDOM, function (node) {\n            return node.__vue__;\n          });\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = nodesVue.filter(function (item) {\n              return item.indeterminate === true;\n            })[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var _node = _step4.value;\n              var _id$parentId = {\n                id: _node.$options.propsData.node.data.id,\n                parentId: _node.$options.propsData.node.data.parentId\n              },\n                  id = _id$parentId.id,\n                  parentId = _id$parentId.parentId;\n              set.add(id);\n              set.add(parentId);\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      this.roleForm.permissions = _toConsumableArray(set).join(',');\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\n  <el-card class=\"box-card\">\n    <div class=\"search-bar\">\n      <el-form :inline=\"true\" :model=\"searchData\" class=\"fl\">\n        <el-input style=\"display: none;\"></el-input>\n        <el-form-item label=\"角色名称\">\n          <el-input v-model=\"searchData.roleName\" placeholder=\"角色名称\" @keyup.enter.native=\"onSearch()\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div class=\"fl\">\n        <el-button type=\"text\" @click=\"handleReset\">重置</el-button>\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"onSearch\">查询</el-button>\n      </div>\n    </div>\n    <div  class=\"tools-bar\">\n      <el-button  type=\"success\" icon=\"el-icon-plus\" size=\"small\" @click=\"dialogFormVisible = true;\">新增角色</el-button>\n    </div>\n    <div>\n      <el-table\n        ref=\"singleTable\"\n        :data=\"tableData\"\n        border\n        highlight-current-row\n        style=\"width: 100%\">\n        <el-table-column\n          type=\"index\"\n          width=\"60\">\n        </el-table-column>\n        <el-table-column\n          prop=\"roleName\"\n          label=\"角色名\"\n          width=\"120\">\n        </el-table-column>\n        <el-table-column\n          label=\"操作权限\"\n          prop=\"erpMemberPermissions\"\n          :formatter=\"permListFormatter\">\n        </el-table-column>\n        <el-table-column\n          label=\"操作\"\n          fixed=\"right\"\n          width=\"180\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"text\" size=\"small\" @click=\"handleEditRoleName(scope.$index, scope.row)\">修改角色名</el-button>\n            <el-button  type=\"text\" size=\"small\" @click=\"handlePower(scope.$index, scope.row)\">授权</el-button>\n            <el-button  type=\"text\" size=\"small\" @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"pagination-bar\">\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :page-sizes=\"[10, 25, 50, 100]\"\n          :page-size=\"pageSize\"\n          :current-page.sync=\"pageNumber\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"totalRecord\">\n        </el-pagination>\n      </div>\n    </div>\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\" @close=\"onDialogClose()\" width=\"80%\">\n      <el-form ref=\"roleForm\" :rules=\"rules\" :model=\"roleForm\" label-width=\"120px\">\n        <el-form-item v-if=\"dialogTitle !== '角色授权'\" label=\"角色名称\" prop=\"roleName\">\n          <el-input v-model=\"roleForm.roleName\"></el-input>\n        </el-form-item>\n\n        <el-form-item v-if=\"dialogTitle !== '角色授权'\" label=\"角色代码\" label-width=\"120px\">\n            <el-input v-model=\"roleForm.roleCode\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item v-if=\"dialogTitle !== '角色授权'\" label=\"状态\" label-width=\"120px\">\n            <el-select v-model=\"roleForm.status\" placeholder=\"请选择状态\">\n                <el-option label=\"停用\" value='0'></el-option>\n                <el-option label=\"启用\" value='1'></el-option>\n            </el-select>\n        </el-form-item>\n\n        <el-form-item v-if=\"dialogTitle=='新增角色并授权' || dialogTitle=='角色授权'\" label=\"权限\">\n          <el-tabs type=\"border-card\">\n            <template v-for=\"(role, key) in roleTree\">\n  <el-tab-pane :key=\"key\" :label=\"role.permissionName\">\n    <el-tree\n      :data=\"role.erpMemberPermissions\"\n      show-checkbox\n      default-expand-all\n      node-key=\"id\"\n      ref=\"tree\"\n      highlight-current\n      :props=\"defaultTreeProps\"\n    >\n    </el-tree>\n  </el-tab-pane>\n</template>\n          </el-tabs>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"info\" @click=\"onEditSubmit()\" v-if=\"dialogTitle=='修改角色名称'\">保存</el-button>\n        <el-button type=\"info\" @click=\"onEditRoleSubmit\" v-if=\"dialogTitle=='角色授权'\">保存</el-button>\n        <el-button type=\"primary\" @click=\"onAddSubmit\" v-if=\"dialogTitle=='新增角色并授权'\">立即创建</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"新增角色\" :visible.sync=\"dialogFormVisible\">\n        <el-form :model=\"form\">\n            <el-form-item label=\"名称\" label-width=\"120px\">\n                <el-input v-model=\"form.roleName\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"角色代码\" label-width=\"120px\">\n                <el-input v-model=\"form.roleCode\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"状态\" label-width=\"120px\">\n                <el-select v-model=\"form.status\" placeholder=\"请选择状态\">\n                    <el-option label=\"停用\" value=\"0\"></el-option>\n                    <el-option label=\"启用\" value=\"1\"></el-option>\n                </el-select>\n            </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n            <el-button type=\"primary\" @click=\"doAdd()\">确 定</el-button>\n        </div>\n    </el-dialog>\n\n  </el-card>\n</template>\n\n<script>\nimport { getRoleList, getAllPermissiion } from '@/api/permission'\nexport default {\n    data() {\n        return {\n            form: {\n                roleName: '',\n                status: '',\n                roleCode: ''\n            },\n            dialogFormVisible: false,\n            dialogSize: 'large',\n            totalRecord: 0,\n            pageSize: 10,\n            pageNumber: 1,\n            dialogVisible: false,\n            dialogTitle: '新增角色并授权',\n            defaultTreeProps: {\n                children: 'erpMemberPermissions',\n                label: 'permissionName'\n            },\n            rules: {\n                roleName: [\n                    {\n                        required: true,\n                        message: '角色名称不能为空',\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            searchData: {\n                roleName: ''\n            },\n            roleForm: {\n                id: '',\n                roleName: '',\n                permissions: '',\n                roleCode: '',\n                roleType: '',\n                status: ''\n            },\n            roleTree: [],\n            tableData: []\n        }\n    },\n    created() {\n        this.loadData()\n        this.onSearch()\n    },\n    methods: {\n        doAdd() {\n            if (\n                !this.form.roleName ||\n                !this.form.status ||\n                !this.form.roleCode\n            ) {\n                this.$message.error('请填充信息后再提交!')\n                return\n            }\n            var formData = new FormData()\n            formData.append('roleName', this.form.roleName)\n            formData.append('status', this.form.status)\n            formData.append('roleCode', this.form.roleCode)\n        },\n        getTreeIndexByRootRoleId(id) {\n            let index\n            const len = this.roleTree.length\n            for (index = 0; index < len; index++) {\n                if (this.roleTree[index].id === id) {\n                    return index\n                }\n            }\n        },\n        getRootRoleIdByRoleId(id) {\n            for (let i = 0; i < this.roleTree.length; i++) {\n                const roles = this.roleTree[i]\n                let hasRole = this.getRole(roles.erpMemberPermissions, id)\n                if (hasRole) {\n                    return roles.id\n                }\n            }\n        },\n        getRole(roles, id) {\n            let hasRole\n            if (!roles) {\n                return\n            }\n            for (let i = 0; i < roles.length; i++) {\n                const role = roles[i]\n                if (role.id === id) {\n                    hasRole = true\n                    break\n                } else if (role.erpMemberPermissions) {\n                    hasRole = this.getRole(role.erpMemberPermissions, id)\n                    if (hasRole) {\n                        break\n                    }\n                }\n            }\n            return hasRole\n        },\n        isLeaf(id) {\n            let isLeaf\n            for (let i = 0; i < this.roleTree.length; i++) {\n                const roles = this.roleTree[i]\n                this.isLeafByRoleId(roles, id, () => {\n                    isLeaf = true\n                })\n                if (isLeaf) {\n                    return true\n                }\n            }\n        },\n        isLeafByRoleId(roles, id, fn) {\n            if (roles.id === id) {\n                if (roles.judge) {\n                    fn()\n                }\n                if (!roles.erpMemberPermissions && roles.parentId !== 0) {\n                    fn()\n                }\n            } else if (roles.erpMemberPermissions) {\n                roles.erpMemberPermissions.map(role => {\n                    this.isLeafByRoleId(role, id, fn)\n                })\n            }\n        },\n        loadData() {\n            getAllPermissiion().then(res => {\n                this.roleTree = res\n                this.roleTree.forEach((item, index) => {\n                    if (item.erpMemberPermissions) {\n                        item.erpMemberPermissions.forEach(\n                            (items, indexs) => {\n                                if (item.erpMemberPermissions[indexs] && item.erpMemberPermissions[indexs].erpMemberPermissions && item.erpMemberPermissions[indexs].erpMemberPermissions.length === 0) {\n                                    this.roleTree[index].erpMemberPermissions[indexs].judge = true\n                                }\n                            }\n                        )\n                    }\n                })\n            })\n        },\n        onDialogClose() {\n            //   this.$refs.roleForm.resetFields();\n            //   if(this.$refs.tree) {\n            //     for(let tree of this.$refs.tree) {\n            //       tree.setCheckedKeys([]);\n            //     }\n            //   }\n        },\n        handleSizeChange(val) {\n            this.pageSize = val\n            this.onSearch()\n        },\n        handleCurrentChange(val) {\n            this.onSearch({ pageNumber: val })\n        },\n        handleReset() {\n            this.searchData = {\n                roleName: ''\n            }\n            this.onSearch()\n        },\n        onSearch({ pageNumber = 1 } = {}) {\n            getRoleList()\n                .then(res => {\n                    this.tableData = res || []\n                })\n        },\n        permListFormatter(row, column, cellValue) {\n            let str = []\n            for (let item of cellValue) {\n                str.push(item.permissionName)\n            }\n            return str.join('，')\n        },\n        handleDelete(index, row) {\n            this.$confirm('确认删除该角色?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {})\n        },\n        handlePower(index, row) {\n            this.dialogSize = 'large'\n            const keys = [\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                []\n            ]\n            this.roleForm.id = row.id\n            row.erpMemberPermissions.map(role => {\n                let id, rootRoleId, treeIndex\n                if (this.isLeaf(role.id)) {\n                    id = role.id\n                    rootRoleId = this.getRootRoleIdByRoleId(id)\n                    treeIndex = this.getTreeIndexByRootRoleId(rootRoleId)\n                    keys[treeIndex].push(id)\n                }\n            })\n            //   console.log(keys)\n            setTimeout(() => {\n                const trees = this.$refs.tree\n                trees.map((tree, index) => {\n                    tree.setCheckedKeys(keys[index])\n                })\n            })\n            this.dialogVisible = true\n            this.dialogTitle = '角色授权'\n        },\n        handleEditRoleName(index, row) {\n            this.dialogSize = 'tiny'\n            for (let x of Object.keys(this.roleForm)) {\n                this.roleForm[x] = row[x]\n            }\n            this.roleForm.status = String(this.roleForm.status)\n            this.dialogVisible = true\n            this.dialogTitle = '修改角色名称'\n        },\n        onAddSubmit() {\n            this.getPermissions()\n            let permissions = this.roleForm.permissions\n            this.$refs.roleForm.validate(valid => {\n                if (valid) {\n                    if (!permissions) {\n                        this.$message({\n                            showClose: true,\n                            message: '请选择权限',\n                            type: 'warning'\n                        })\n                        return false\n                    }\n                }\n            })\n        },\n        onEditSubmit() {\n            this.$refs.roleForm.validate(valid => {\n                if (valid) {\n                    var formData = new URLSearchParams()\n                    formData.append('roleName', this.roleForm.roleName)\n                    formData.append('id', this.roleForm.id)\n                    formData.append('roleCode', this.roleForm.roleCode)\n                    formData.append('status', this.roleForm.status)\n                }\n            })\n        },\n        onEditRoleSubmit() {\n            this.getPermissions()\n            let permissions = this.roleForm.permissions\n            this.$refs.roleForm.validate(valid => {\n                if (valid) {\n                    if (!permissions) {\n                        this.$message({\n                            showClose: true,\n                            message: '请选择权限',\n                            type: 'warning'\n                        })\n                        return\n                    }\n                    var formData = new URLSearchParams()\n                    this.roleForm.permissions.split(',').forEach(element => {\n                        formData.append('permissionIds', element)\n                    })\n                }\n            })\n        },\n        getPermissions() {\n            let set = new Set()\n            for (let tree of this.$refs.tree) {\n                // 对选中的节点进行处理\n                let nodes = tree.getCheckedNodes()\n                for (let node of nodes) {\n                    let { id, parentId } = node\n                    set.add(id)\n                    set.add(parentId)\n                }\n                // 对半选中状态的节点进行处理\n                let nodesDOM = tree.$el.querySelectorAll('.el-tree-node')\n                let nodesVue = [].map.call(nodesDOM, node => node.__vue__)\n                for (let node of nodesVue.filter(\n                    item => item.indeterminate === true\n                )) {\n                    let { id, parentId } = {\n                        id: node.$options.propsData.node.data.id,\n                        parentId: node.$options.propsData.node.data.parentId\n                    }\n                    set.add(id)\n                    set.add(parentId)\n                }\n            }\n\n            this.roleForm.permissions = [...set].join(',')\n        }\n    }\n}\n</script>\n\n<style>\n.fr{\n    float:right;\n}\n.fl{\n    float:left;\n}\n.search-bar{\n    overflow: hidden;\n}\n.tools-bar{\n    margin-bottom:20px;\n}\n</style>\n"],"sourceRoot":"src/pages/permission/role-manage"}]}