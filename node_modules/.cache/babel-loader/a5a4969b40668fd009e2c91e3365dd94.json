{"remainingRequest":"/Users/wangyanli/Documents/a/y/addVue/node_modules/babel-loader/lib/index.js!/Users/wangyanli/Documents/a/y/addVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangyanli/Documents/a/y/addVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangyanli/Documents/a/y/addVue/src/pages/permission/user-manage/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangyanli/Documents/a/y/addVue/src/pages/permission/user-manage/index.vue","mtime":1684630200000},{"path":"/Users/wangyanli/Documents/a/y/addVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangyanli/Documents/a/y/addVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wangyanli/Documents/a/y/addVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangyanli/Documents/a/y/addVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _typeof from \"/Users/wangyanli/Documents/a/y/addVue/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/wangyanli/Documents/a/y/addVue/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getUserList } from '@/api/permission';\nimport moment from 'moment';\nexport default {\n  data: function data() {\n    return {\n      totalRecord: 0,\n      pageSize: 10,\n      tableLoading: false,\n      dialogVisible: false,\n      dialogTitle: '新增用户',\n      roles: [{\n        id: 1,\n        roleName: '超级管理员'\n      }, {\n        id: 2,\n        roleName: '普通用户'\n      }],\n      defaultTreeProps: {\n        children: 'childPermList',\n        label: 'permissionName'\n      },\n      rules: {\n        loginName: [{\n          required: true,\n          message: '登录名不能为空',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 50,\n          message: '登录名长度在 1 到 50 个字符',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '真实姓名不能为空',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 20,\n          message: '真实姓名长度在 1 到 20 个字符',\n          trigger: 'blur'\n        }],\n        mobile: [{\n          required: true,\n          message: '联系电话不能为空',\n          trigger: 'blur'\n        }, {\n          pattern: /^(13|15|18|14|17)[0-9]{9}$/,\n          message: '手机号码格式不正确',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱地址',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '邮箱格式不正确',\n          trigger: 'blur, change'\n        }]\n      },\n      searchData: {\n        loginName: ''\n      },\n      dataForm: {\n        id: '',\n        loginName: '',\n        tempRoleIds: [],\n        roleIds: '',\n        name: '',\n        mobile: '',\n        address: '',\n        email: ''\n      },\n      tableData: []\n    };\n  },\n  created: function created() {\n    this.initList();\n  },\n  methods: {\n    initList: function () {\n      var _initList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getUserList();\n\n              case 2:\n                data = _context.sent;\n                this.tableData = data;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function initList() {\n        return _initList.apply(this, arguments);\n      }\n\n      return initList;\n    }(),\n    handleStatus: function handleStatus(row) {},\n    statusFormat: function statusFormat(row, column, cellValue) {\n      return {\n        '0': '停用',\n        '1': '启用'\n      }[cellValue] || '';\n    },\n    onDialogClose: function onDialogClose() {\n      this.dataForm.tempRoleIds = [];\n      this.$refs.dataForm.resetFields();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.pageSize = val;\n      this.onSearch();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.onSearch({\n        pageNumber: val\n      });\n    },\n    handleReset: function handleReset() {\n      this.searchData = {\n        loginName: ''\n      };\n      this.onSearch();\n    },\n    onSearch: function onSearch() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$pageNumber = _ref.pageNumber,\n          pageNumber = _ref$pageNumber === void 0 ? 1 : _ref$pageNumber;\n    },\n    toDateTime: function toDateTime(row, column, cellValue) {\n      return cellValue ? moment(cellValue).format('YYYY-MM-DD HH:mm:ss') : '';\n    },\n    roleFormatter: function roleFormatter(row, column, cellValue) {\n      var result = [];\n\n      if (_typeof(row.erpMemberRoles) === 'object' && row.erpMemberRoles.length > 0) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = row.erpMemberRoles[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n            result.push(item.roleName);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      return result.join('，');\n    },\n    handleChangeStatus: function handleChangeStatus(index, row) {},\n    handleResetPwd: function handleResetPwd(index, row) {\n      this.$confirm('确认重置该用户的登录密码？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {});\n    },\n    handleEdit: function handleEdit(index, row) {\n      this.dialogVisible = true;\n      this.dialogTitle = '修改用户信息';\n      this.dataForm.tempRoleIds = [];\n\n      for (var _i = 0, _Object$keys = Object.keys(this.dataForm); _i < _Object$keys.length; _i++) {\n        var x = _Object$keys[_i];\n\n        if (x === 'tempRoleIds' && _typeof(row.roleList) === 'object' && row.roleList.length > 0) {\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = row.roleList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var item = _step2.value;\n              this.dataForm.tempRoleIds.push(item.id);\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        } else {\n          this.dataForm[x] = row[x];\n        }\n      }\n    },\n    onDialogSubmit: function onDialogSubmit() {}\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\n  <el-card class=\"box-card\">\n    <div class=\"search-bar\">\n      <el-form :inline=\"true\" :model=\"searchData\" class=\"fl\">\n        <el-input style=\"display: none;\"></el-input>\n        <el-form-item label=\"登录名称\">\n          <el-input v-model=\"searchData.loginName\" placeholder=\"登录名称\" @keyup.enter.native=\"onSearch()\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div class=\"fl\">\n        <el-button type=\"text\" @click=\"handleReset\">重置</el-button>\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"onSearch\">查询</el-button>\n      </div>\n    </div>\n    <div  class=\"tools-bar\">\n      <el-button type=\"success\" icon=\"el-icon-plus\" size=\"small\" @click=\"dialogVisible = true;dialogTitle='新增用户'\">新增用户</el-button>\n    </div>\n    <div>\n      <el-table\n        v-loading.body=\"tableLoading\"\n        ref=\"singleTable\"\n        :data=\"tableData\"\n        border\n        highlight-current-row\n        style=\"width: 100%\">\n        <el-table-column\n          type=\"index\"\n          width=\"60\">\n        </el-table-column>\n        <el-table-column\n          prop=\"status\"\n          label=\"停用/启用\"\n          align=\"center\"\n          min-width=\"100\">\n          <template slot-scope=\"scope\">\n            <!-- <el-tag v-if=\"scope.row.status=='1'\" color=\"#13CE66\">启用</el-tag>\n            <el-tag v-if=\"scope.row.status=='0'\" color=\"#FF4949\">停用</el-tag> -->\n            <el-switch\n              v-model=\"scope.row.status\"\n              :active-value=\"1\"\n              :inactive-value=\"0\"\n              active-text=\"\"\n              inactive-text=\"\"\n              @change=\"handleStatus(scope.row)\">\n            </el-switch>\n          </template>\n        </el-table-column>\n        <el-table-column\n          prop=\"loginName\"\n          label=\"登录名\"\n          min-width=\"120\">\n        </el-table-column>\n        <el-table-column\n          prop=\"name\"\n          label=\"真实姓名\"\n          min-width=\"120\">\n        </el-table-column>\n        <el-table-column\n          prop=\"mobile\"\n          label=\"联系电话\"\n          width=\"130\">\n        </el-table-column>\n        <el-table-column\n          prop=\"roleList\"\n          :formatter=\"roleFormatter\"\n          min-width=\"210\"\n          label=\"权限\">\n        </el-table-column>\n        <el-table-column\n          prop=\"address\"\n          min-width=\"200\"\n          label=\"联系地址\">\n        </el-table-column>\n        <el-table-column\n          prop=\"email\"\n          label=\"电子邮箱\"\n          width=\"250\">\n        </el-table-column>\n        <el-table-column\n          prop=\"lastLoginTime\"\n          label=\"最后登录时间\"\n          :formatter=\"toDateTime\"\n          width=\"180\">\n        </el-table-column>\n        <el-table-column\n          label=\"操作\"\n          fixed=\"right\"\n          width=\"170\">\n          <template slot-scope=\"scope\">\n  <div>\n    <el-button\n      type=\"text\"\n      size=\"small\"\n      @click=\"handleEdit(scope.$index, scope.row)\"\n    >编辑</el-button>\n    <el-button\n      type=\"text\"\n      size=\"small\"\n      @click=\"handleResetPwd(scope.$index, scope.row)\"\n    >重置密码</el-button>\n  </div>\n</template>\n        </el-table-column>\n      </el-table>\n      <div class=\"pagination-bar\">\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :page-sizes=\"[10, 25, 50, 100]\"\n          :page-size=\"pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"totalRecord\">\n        </el-pagination>\n      </div>\n    </div>\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\" @close=\"onDialogClose()\">\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"dataForm\" label-width=\"80px\">\n        <el-form-item label=\"登录名\" prop=\"loginName\">\n          <template v-if=\"dialogTitle=='修改用户信息'\">{{dataForm.loginName}}</template>\n          <el-input v-else v-model=\"dataForm.loginName\" placeholder=\"登录名\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"用户角色\" prop=\"roleIds\">\n          <el-select v-model=\"dataForm.tempRoleIds\" multiple placeholder=\"请选择\" style=\"width: 100%;\">\n            <el-option\n              v-for=\"item in roles\"\n              :key=\"item.id\"\n              :label=\"item.roleName\"\n              :value=\"item.id\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"真实姓名\" prop=\"name\">\n              <el-input v-model=\"dataForm.name\" placeholder=\"真实姓名\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"联系电话\" prop=\"mobile\">\n              <el-input v-model=\"dataForm.mobile\" placeholder=\"联系电话\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"联系地址\" prop=\"address\">\n              <el-input v-model=\"dataForm.address\" placeholder=\"联系地址\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"电子邮箱\" prop=\"email\">\n              <el-input v-model=\"dataForm.email\" placeholder=\"电子邮箱\"></el-input>\n            </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"info\" @click=\"onDialogSubmit()\" v-if=\"dialogTitle=='修改用户信息'\">保存</el-button>\n        <el-button type=\"primary\" @click=\"onDialogSubmit()\" v-else>立即创建</el-button>\n      </div>\n    </el-dialog>\n  </el-card>\n</template>\n<script>\nimport { getUserList } from '@/api/permission'\nimport moment from 'moment'\nexport default {\n    data() {\n        return {\n            totalRecord: 0,\n            pageSize: 10,\n            tableLoading: false,\n            dialogVisible: false,\n            dialogTitle: '新增用户',\n            roles: [\n                {\n                    id: 1,\n                    roleName: '超级管理员'\n                },\n                {\n                    id: 2,\n                    roleName: '普通用户'\n                }\n            ],\n            defaultTreeProps: {\n                children: 'childPermList',\n                label: 'permissionName'\n            },\n            rules: {\n                loginName: [\n                    {\n                        required: true,\n                        message: '登录名不能为空',\n                        trigger: 'blur'\n                    },\n                    {\n                        min: 1,\n                        max: 50,\n                        message: '登录名长度在 1 到 50 个字符',\n                        trigger: 'blur'\n                    }\n                ],\n                name: [\n                    {\n                        required: true,\n                        message: '真实姓名不能为空',\n                        trigger: 'blur'\n                    },\n                    {\n                        min: 1,\n                        max: 20,\n                        message: '真实姓名长度在 1 到 20 个字符',\n                        trigger: 'blur'\n                    }\n                ],\n                mobile: [\n                    {\n                        required: true,\n                        message: '联系电话不能为空',\n                        trigger: 'blur'\n                    },\n                    {\n                        pattern: /^(13|15|18|14|17)[0-9]{9}$/,\n                        message: '手机号码格式不正确',\n                        trigger: 'blur'\n                    }\n                ],\n                email: [\n                    {\n                        required: true,\n                        message: '请输入邮箱地址',\n                        trigger: 'blur'\n                    },\n                    {\n                        type: 'email',\n                        message: '邮箱格式不正确',\n                        trigger: 'blur, change'\n                    }\n                ]\n            },\n            searchData: {\n                loginName: ''\n            },\n            dataForm: {\n                id: '',\n                loginName: '',\n                tempRoleIds: [],\n                roleIds: '',\n                name: '',\n                mobile: '',\n                address: '',\n                email: ''\n            },\n            tableData: []\n        }\n    },\n    created() {\n        this.initList()\n    },\n    methods: {\n        async initList() {\n            const data = await getUserList()\n            this.tableData = data\n        },\n        handleStatus(row) {},\n        statusFormat(row, column, cellValue) {\n            return { '0': '停用', '1': '启用' }[cellValue] || ''\n        },\n        onDialogClose() {\n            this.dataForm.tempRoleIds = []\n            this.$refs.dataForm.resetFields()\n        },\n        handleSizeChange(val) {\n            this.pageSize = val\n            this.onSearch()\n        },\n        handleCurrentChange(val) {\n            this.onSearch({ pageNumber: val })\n        },\n        handleReset() {\n            this.searchData = {\n                loginName: ''\n            }\n            this.onSearch()\n        },\n        onSearch({ pageNumber = 1 } = {}) {},\n        toDateTime(row, column, cellValue) {\n            return cellValue\n                ? moment(cellValue).format('YYYY-MM-DD HH:mm:ss')\n                : ''\n        },\n        roleFormatter(row, column, cellValue) {\n            let result = []\n            if (typeof row.erpMemberRoles === 'object' && row.erpMemberRoles.length > 0) {\n                for (let item of row.erpMemberRoles) {\n                    result.push(item.roleName)\n                }\n            }\n            return result.join('，')\n        },\n        handleChangeStatus(index, row) {},\n        handleResetPwd(index, row) {\n            this.$confirm('确认重置该用户的登录密码？', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {})\n        },\n        handleEdit(index, row) {\n            this.dialogVisible = true\n            this.dialogTitle = '修改用户信息'\n            this.dataForm.tempRoleIds = []\n            for (let x of Object.keys(this.dataForm)) {\n                if (\n                    x === 'tempRoleIds' &&\n                    typeof row.roleList === 'object' &&\n                    row.roleList.length > 0\n                ) {\n                    for (let item of row.roleList) {\n                        this.dataForm.tempRoleIds.push(item.id)\n                    }\n                } else {\n                    this.dataForm[x] = row[x]\n                }\n            }\n        },\n        onDialogSubmit() {}\n    }\n}\n</script>\n\n<style lang=\"scss\">\n.fr{\n    float:right;\n}\n.fl{\n    float:left;\n}\n.search-bar{\n    overflow: hidden;\n}\n</style>\n\n<style>\n.tools-bar{\n  margin-bottom:20px;\n}\n</style>\n"],"sourceRoot":"src/pages/permission/user-manage"}]}