{"remainingRequest":"/Users/wangyanli/Documents/a/y/addVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangyanli/Documents/a/y/addVue/src/pages/permission/role-manage/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangyanli/Documents/a/y/addVue/src/pages/permission/role-manage/index.vue","mtime":1684630200000},{"path":"/Users/wangyanli/Documents/a/y/addVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangyanli/Documents/a/y/addVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wangyanli/Documents/a/y/addVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangyanli/Documents/a/y/addVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getRoleList, getAllPermissiion } from '@/api/permission'\nexport default {\n    data() {\n        return {\n            form: {\n                roleName: '',\n                status: '',\n                roleCode: ''\n            },\n            dialogFormVisible: false,\n            dialogSize: 'large',\n            totalRecord: 0,\n            pageSize: 10,\n            pageNumber: 1,\n            dialogVisible: false,\n            dialogTitle: '新增角色并授权',\n            defaultTreeProps: {\n                children: 'erpMemberPermissions',\n                label: 'permissionName'\n            },\n            rules: {\n                roleName: [\n                    {\n                        required: true,\n                        message: '角色名称不能为空',\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            searchData: {\n                roleName: ''\n            },\n            roleForm: {\n                id: '',\n                roleName: '',\n                permissions: '',\n                roleCode: '',\n                roleType: '',\n                status: ''\n            },\n            roleTree: [],\n            tableData: []\n        }\n    },\n    created() {\n        this.loadData()\n        this.onSearch()\n    },\n    methods: {\n        doAdd() {\n            if (\n                !this.form.roleName ||\n                !this.form.status ||\n                !this.form.roleCode\n            ) {\n                this.$message.error('请填充信息后再提交!')\n                return\n            }\n            var formData = new FormData()\n            formData.append('roleName', this.form.roleName)\n            formData.append('status', this.form.status)\n            formData.append('roleCode', this.form.roleCode)\n        },\n        getTreeIndexByRootRoleId(id) {\n            let index\n            const len = this.roleTree.length\n            for (index = 0; index < len; index++) {\n                if (this.roleTree[index].id === id) {\n                    return index\n                }\n            }\n        },\n        getRootRoleIdByRoleId(id) {\n            for (let i = 0; i < this.roleTree.length; i++) {\n                const roles = this.roleTree[i]\n                let hasRole = this.getRole(roles.erpMemberPermissions, id)\n                if (hasRole) {\n                    return roles.id\n                }\n            }\n        },\n        getRole(roles, id) {\n            let hasRole\n            if (!roles) {\n                return\n            }\n            for (let i = 0; i < roles.length; i++) {\n                const role = roles[i]\n                if (role.id === id) {\n                    hasRole = true\n                    break\n                } else if (role.erpMemberPermissions) {\n                    hasRole = this.getRole(role.erpMemberPermissions, id)\n                    if (hasRole) {\n                        break\n                    }\n                }\n            }\n            return hasRole\n        },\n        isLeaf(id) {\n            let isLeaf\n            for (let i = 0; i < this.roleTree.length; i++) {\n                const roles = this.roleTree[i]\n                this.isLeafByRoleId(roles, id, () => {\n                    isLeaf = true\n                })\n                if (isLeaf) {\n                    return true\n                }\n            }\n        },\n        isLeafByRoleId(roles, id, fn) {\n            if (roles.id === id) {\n                if (roles.judge) {\n                    fn()\n                }\n                if (!roles.erpMemberPermissions && roles.parentId !== 0) {\n                    fn()\n                }\n            } else if (roles.erpMemberPermissions) {\n                roles.erpMemberPermissions.map(role => {\n                    this.isLeafByRoleId(role, id, fn)\n                })\n            }\n        },\n        loadData() {\n            getAllPermissiion().then(res => {\n                this.roleTree = res\n                this.roleTree.forEach((item, index) => {\n                    if (item.erpMemberPermissions) {\n                        item.erpMemberPermissions.forEach(\n                            (items, indexs) => {\n                                if (item.erpMemberPermissions[indexs] && item.erpMemberPermissions[indexs].erpMemberPermissions && item.erpMemberPermissions[indexs].erpMemberPermissions.length === 0) {\n                                    this.roleTree[index].erpMemberPermissions[indexs].judge = true\n                                }\n                            }\n                        )\n                    }\n                })\n            })\n        },\n        onDialogClose() {\n            //   this.$refs.roleForm.resetFields();\n            //   if(this.$refs.tree) {\n            //     for(let tree of this.$refs.tree) {\n            //       tree.setCheckedKeys([]);\n            //     }\n            //   }\n        },\n        handleSizeChange(val) {\n            this.pageSize = val\n            this.onSearch()\n        },\n        handleCurrentChange(val) {\n            this.onSearch({ pageNumber: val })\n        },\n        handleReset() {\n            this.searchData = {\n                roleName: ''\n            }\n            this.onSearch()\n        },\n        onSearch({ pageNumber = 1 } = {}) {\n            getRoleList()\n                .then(res => {\n                    this.tableData = res || []\n                })\n        },\n        permListFormatter(row, column, cellValue) {\n            let str = []\n            for (let item of cellValue) {\n                str.push(item.permissionName)\n            }\n            return str.join('，')\n        },\n        handleDelete(index, row) {\n            this.$confirm('确认删除该角色?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {})\n        },\n        handlePower(index, row) {\n            this.dialogSize = 'large'\n            const keys = [\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                []\n            ]\n            this.roleForm.id = row.id\n            row.erpMemberPermissions.map(role => {\n                let id, rootRoleId, treeIndex\n                if (this.isLeaf(role.id)) {\n                    id = role.id\n                    rootRoleId = this.getRootRoleIdByRoleId(id)\n                    treeIndex = this.getTreeIndexByRootRoleId(rootRoleId)\n                    keys[treeIndex].push(id)\n                }\n            })\n            //   console.log(keys)\n            setTimeout(() => {\n                const trees = this.$refs.tree\n                trees.map((tree, index) => {\n                    tree.setCheckedKeys(keys[index])\n                })\n            })\n            this.dialogVisible = true\n            this.dialogTitle = '角色授权'\n        },\n        handleEditRoleName(index, row) {\n            this.dialogSize = 'tiny'\n            for (let x of Object.keys(this.roleForm)) {\n                this.roleForm[x] = row[x]\n            }\n            this.roleForm.status = String(this.roleForm.status)\n            this.dialogVisible = true\n            this.dialogTitle = '修改角色名称'\n        },\n        onAddSubmit() {\n            this.getPermissions()\n            let permissions = this.roleForm.permissions\n            this.$refs.roleForm.validate(valid => {\n                if (valid) {\n                    if (!permissions) {\n                        this.$message({\n                            showClose: true,\n                            message: '请选择权限',\n                            type: 'warning'\n                        })\n                        return false\n                    }\n                }\n            })\n        },\n        onEditSubmit() {\n            this.$refs.roleForm.validate(valid => {\n                if (valid) {\n                    var formData = new URLSearchParams()\n                    formData.append('roleName', this.roleForm.roleName)\n                    formData.append('id', this.roleForm.id)\n                    formData.append('roleCode', this.roleForm.roleCode)\n                    formData.append('status', this.roleForm.status)\n                }\n            })\n        },\n        onEditRoleSubmit() {\n            this.getPermissions()\n            let permissions = this.roleForm.permissions\n            this.$refs.roleForm.validate(valid => {\n                if (valid) {\n                    if (!permissions) {\n                        this.$message({\n                            showClose: true,\n                            message: '请选择权限',\n                            type: 'warning'\n                        })\n                        return\n                    }\n                    var formData = new URLSearchParams()\n                    this.roleForm.permissions.split(',').forEach(element => {\n                        formData.append('permissionIds', element)\n                    })\n                }\n            })\n        },\n        getPermissions() {\n            let set = new Set()\n            for (let tree of this.$refs.tree) {\n                // 对选中的节点进行处理\n                let nodes = tree.getCheckedNodes()\n                for (let node of nodes) {\n                    let { id, parentId } = node\n                    set.add(id)\n                    set.add(parentId)\n                }\n                // 对半选中状态的节点进行处理\n                let nodesDOM = tree.$el.querySelectorAll('.el-tree-node')\n                let nodesVue = [].map.call(nodesDOM, node => node.__vue__)\n                for (let node of nodesVue.filter(\n                    item => item.indeterminate === true\n                )) {\n                    let { id, parentId } = {\n                        id: node.$options.propsData.node.data.id,\n                        parentId: node.$options.propsData.node.data.parentId\n                    }\n                    set.add(id)\n                    set.add(parentId)\n                }\n            }\n\n            this.roleForm.permissions = [...set].join(',')\n        }\n    }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"index.vue","sourceRoot":"src/pages/permission/role-manage","sourcesContent":["<template lang=\"html\">\n  <el-card class=\"box-card\">\n    <div class=\"search-bar\">\n      <el-form :inline=\"true\" :model=\"searchData\" class=\"fl\">\n        <el-input style=\"display: none;\"></el-input>\n        <el-form-item label=\"角色名称\">\n          <el-input v-model=\"searchData.roleName\" placeholder=\"角色名称\" @keyup.enter.native=\"onSearch()\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div class=\"fl\">\n        <el-button type=\"text\" @click=\"handleReset\">重置</el-button>\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"onSearch\">查询</el-button>\n      </div>\n    </div>\n    <div  class=\"tools-bar\">\n      <el-button  type=\"success\" icon=\"el-icon-plus\" size=\"small\" @click=\"dialogFormVisible = true;\">新增角色</el-button>\n    </div>\n    <div>\n      <el-table\n        ref=\"singleTable\"\n        :data=\"tableData\"\n        border\n        highlight-current-row\n        style=\"width: 100%\">\n        <el-table-column\n          type=\"index\"\n          width=\"60\">\n        </el-table-column>\n        <el-table-column\n          prop=\"roleName\"\n          label=\"角色名\"\n          width=\"120\">\n        </el-table-column>\n        <el-table-column\n          label=\"操作权限\"\n          prop=\"erpMemberPermissions\"\n          :formatter=\"permListFormatter\">\n        </el-table-column>\n        <el-table-column\n          label=\"操作\"\n          fixed=\"right\"\n          width=\"180\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"text\" size=\"small\" @click=\"handleEditRoleName(scope.$index, scope.row)\">修改角色名</el-button>\n            <el-button  type=\"text\" size=\"small\" @click=\"handlePower(scope.$index, scope.row)\">授权</el-button>\n            <el-button  type=\"text\" size=\"small\" @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"pagination-bar\">\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :page-sizes=\"[10, 25, 50, 100]\"\n          :page-size=\"pageSize\"\n          :current-page.sync=\"pageNumber\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"totalRecord\">\n        </el-pagination>\n      </div>\n    </div>\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\" @close=\"onDialogClose()\" width=\"80%\">\n      <el-form ref=\"roleForm\" :rules=\"rules\" :model=\"roleForm\" label-width=\"120px\">\n        <el-form-item v-if=\"dialogTitle !== '角色授权'\" label=\"角色名称\" prop=\"roleName\">\n          <el-input v-model=\"roleForm.roleName\"></el-input>\n        </el-form-item>\n\n        <el-form-item v-if=\"dialogTitle !== '角色授权'\" label=\"角色代码\" label-width=\"120px\">\n            <el-input v-model=\"roleForm.roleCode\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item v-if=\"dialogTitle !== '角色授权'\" label=\"状态\" label-width=\"120px\">\n            <el-select v-model=\"roleForm.status\" placeholder=\"请选择状态\">\n                <el-option label=\"停用\" value='0'></el-option>\n                <el-option label=\"启用\" value='1'></el-option>\n            </el-select>\n        </el-form-item>\n\n        <el-form-item v-if=\"dialogTitle=='新增角色并授权' || dialogTitle=='角色授权'\" label=\"权限\">\n          <el-tabs type=\"border-card\">\n            <template v-for=\"(role, key) in roleTree\">\n  <el-tab-pane :key=\"key\" :label=\"role.permissionName\">\n    <el-tree\n      :data=\"role.erpMemberPermissions\"\n      show-checkbox\n      default-expand-all\n      node-key=\"id\"\n      ref=\"tree\"\n      highlight-current\n      :props=\"defaultTreeProps\"\n    >\n    </el-tree>\n  </el-tab-pane>\n</template>\n          </el-tabs>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"info\" @click=\"onEditSubmit()\" v-if=\"dialogTitle=='修改角色名称'\">保存</el-button>\n        <el-button type=\"info\" @click=\"onEditRoleSubmit\" v-if=\"dialogTitle=='角色授权'\">保存</el-button>\n        <el-button type=\"primary\" @click=\"onAddSubmit\" v-if=\"dialogTitle=='新增角色并授权'\">立即创建</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"新增角色\" :visible.sync=\"dialogFormVisible\">\n        <el-form :model=\"form\">\n            <el-form-item label=\"名称\" label-width=\"120px\">\n                <el-input v-model=\"form.roleName\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"角色代码\" label-width=\"120px\">\n                <el-input v-model=\"form.roleCode\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"状态\" label-width=\"120px\">\n                <el-select v-model=\"form.status\" placeholder=\"请选择状态\">\n                    <el-option label=\"停用\" value=\"0\"></el-option>\n                    <el-option label=\"启用\" value=\"1\"></el-option>\n                </el-select>\n            </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n            <el-button type=\"primary\" @click=\"doAdd()\">确 定</el-button>\n        </div>\n    </el-dialog>\n\n  </el-card>\n</template>\n\n<script>\nimport { getRoleList, getAllPermissiion } from '@/api/permission'\nexport default {\n    data() {\n        return {\n            form: {\n                roleName: '',\n                status: '',\n                roleCode: ''\n            },\n            dialogFormVisible: false,\n            dialogSize: 'large',\n            totalRecord: 0,\n            pageSize: 10,\n            pageNumber: 1,\n            dialogVisible: false,\n            dialogTitle: '新增角色并授权',\n            defaultTreeProps: {\n                children: 'erpMemberPermissions',\n                label: 'permissionName'\n            },\n            rules: {\n                roleName: [\n                    {\n                        required: true,\n                        message: '角色名称不能为空',\n                        trigger: 'blur'\n                    }\n                ]\n            },\n            searchData: {\n                roleName: ''\n            },\n            roleForm: {\n                id: '',\n                roleName: '',\n                permissions: '',\n                roleCode: '',\n                roleType: '',\n                status: ''\n            },\n            roleTree: [],\n            tableData: []\n        }\n    },\n    created() {\n        this.loadData()\n        this.onSearch()\n    },\n    methods: {\n        doAdd() {\n            if (\n                !this.form.roleName ||\n                !this.form.status ||\n                !this.form.roleCode\n            ) {\n                this.$message.error('请填充信息后再提交!')\n                return\n            }\n            var formData = new FormData()\n            formData.append('roleName', this.form.roleName)\n            formData.append('status', this.form.status)\n            formData.append('roleCode', this.form.roleCode)\n        },\n        getTreeIndexByRootRoleId(id) {\n            let index\n            const len = this.roleTree.length\n            for (index = 0; index < len; index++) {\n                if (this.roleTree[index].id === id) {\n                    return index\n                }\n            }\n        },\n        getRootRoleIdByRoleId(id) {\n            for (let i = 0; i < this.roleTree.length; i++) {\n                const roles = this.roleTree[i]\n                let hasRole = this.getRole(roles.erpMemberPermissions, id)\n                if (hasRole) {\n                    return roles.id\n                }\n            }\n        },\n        getRole(roles, id) {\n            let hasRole\n            if (!roles) {\n                return\n            }\n            for (let i = 0; i < roles.length; i++) {\n                const role = roles[i]\n                if (role.id === id) {\n                    hasRole = true\n                    break\n                } else if (role.erpMemberPermissions) {\n                    hasRole = this.getRole(role.erpMemberPermissions, id)\n                    if (hasRole) {\n                        break\n                    }\n                }\n            }\n            return hasRole\n        },\n        isLeaf(id) {\n            let isLeaf\n            for (let i = 0; i < this.roleTree.length; i++) {\n                const roles = this.roleTree[i]\n                this.isLeafByRoleId(roles, id, () => {\n                    isLeaf = true\n                })\n                if (isLeaf) {\n                    return true\n                }\n            }\n        },\n        isLeafByRoleId(roles, id, fn) {\n            if (roles.id === id) {\n                if (roles.judge) {\n                    fn()\n                }\n                if (!roles.erpMemberPermissions && roles.parentId !== 0) {\n                    fn()\n                }\n            } else if (roles.erpMemberPermissions) {\n                roles.erpMemberPermissions.map(role => {\n                    this.isLeafByRoleId(role, id, fn)\n                })\n            }\n        },\n        loadData() {\n            getAllPermissiion().then(res => {\n                this.roleTree = res\n                this.roleTree.forEach((item, index) => {\n                    if (item.erpMemberPermissions) {\n                        item.erpMemberPermissions.forEach(\n                            (items, indexs) => {\n                                if (item.erpMemberPermissions[indexs] && item.erpMemberPermissions[indexs].erpMemberPermissions && item.erpMemberPermissions[indexs].erpMemberPermissions.length === 0) {\n                                    this.roleTree[index].erpMemberPermissions[indexs].judge = true\n                                }\n                            }\n                        )\n                    }\n                })\n            })\n        },\n        onDialogClose() {\n            //   this.$refs.roleForm.resetFields();\n            //   if(this.$refs.tree) {\n            //     for(let tree of this.$refs.tree) {\n            //       tree.setCheckedKeys([]);\n            //     }\n            //   }\n        },\n        handleSizeChange(val) {\n            this.pageSize = val\n            this.onSearch()\n        },\n        handleCurrentChange(val) {\n            this.onSearch({ pageNumber: val })\n        },\n        handleReset() {\n            this.searchData = {\n                roleName: ''\n            }\n            this.onSearch()\n        },\n        onSearch({ pageNumber = 1 } = {}) {\n            getRoleList()\n                .then(res => {\n                    this.tableData = res || []\n                })\n        },\n        permListFormatter(row, column, cellValue) {\n            let str = []\n            for (let item of cellValue) {\n                str.push(item.permissionName)\n            }\n            return str.join('，')\n        },\n        handleDelete(index, row) {\n            this.$confirm('确认删除该角色?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {})\n        },\n        handlePower(index, row) {\n            this.dialogSize = 'large'\n            const keys = [\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                [],\n                []\n            ]\n            this.roleForm.id = row.id\n            row.erpMemberPermissions.map(role => {\n                let id, rootRoleId, treeIndex\n                if (this.isLeaf(role.id)) {\n                    id = role.id\n                    rootRoleId = this.getRootRoleIdByRoleId(id)\n                    treeIndex = this.getTreeIndexByRootRoleId(rootRoleId)\n                    keys[treeIndex].push(id)\n                }\n            })\n            //   console.log(keys)\n            setTimeout(() => {\n                const trees = this.$refs.tree\n                trees.map((tree, index) => {\n                    tree.setCheckedKeys(keys[index])\n                })\n            })\n            this.dialogVisible = true\n            this.dialogTitle = '角色授权'\n        },\n        handleEditRoleName(index, row) {\n            this.dialogSize = 'tiny'\n            for (let x of Object.keys(this.roleForm)) {\n                this.roleForm[x] = row[x]\n            }\n            this.roleForm.status = String(this.roleForm.status)\n            this.dialogVisible = true\n            this.dialogTitle = '修改角色名称'\n        },\n        onAddSubmit() {\n            this.getPermissions()\n            let permissions = this.roleForm.permissions\n            this.$refs.roleForm.validate(valid => {\n                if (valid) {\n                    if (!permissions) {\n                        this.$message({\n                            showClose: true,\n                            message: '请选择权限',\n                            type: 'warning'\n                        })\n                        return false\n                    }\n                }\n            })\n        },\n        onEditSubmit() {\n            this.$refs.roleForm.validate(valid => {\n                if (valid) {\n                    var formData = new URLSearchParams()\n                    formData.append('roleName', this.roleForm.roleName)\n                    formData.append('id', this.roleForm.id)\n                    formData.append('roleCode', this.roleForm.roleCode)\n                    formData.append('status', this.roleForm.status)\n                }\n            })\n        },\n        onEditRoleSubmit() {\n            this.getPermissions()\n            let permissions = this.roleForm.permissions\n            this.$refs.roleForm.validate(valid => {\n                if (valid) {\n                    if (!permissions) {\n                        this.$message({\n                            showClose: true,\n                            message: '请选择权限',\n                            type: 'warning'\n                        })\n                        return\n                    }\n                    var formData = new URLSearchParams()\n                    this.roleForm.permissions.split(',').forEach(element => {\n                        formData.append('permissionIds', element)\n                    })\n                }\n            })\n        },\n        getPermissions() {\n            let set = new Set()\n            for (let tree of this.$refs.tree) {\n                // 对选中的节点进行处理\n                let nodes = tree.getCheckedNodes()\n                for (let node of nodes) {\n                    let { id, parentId } = node\n                    set.add(id)\n                    set.add(parentId)\n                }\n                // 对半选中状态的节点进行处理\n                let nodesDOM = tree.$el.querySelectorAll('.el-tree-node')\n                let nodesVue = [].map.call(nodesDOM, node => node.__vue__)\n                for (let node of nodesVue.filter(\n                    item => item.indeterminate === true\n                )) {\n                    let { id, parentId } = {\n                        id: node.$options.propsData.node.data.id,\n                        parentId: node.$options.propsData.node.data.parentId\n                    }\n                    set.add(id)\n                    set.add(parentId)\n                }\n            }\n\n            this.roleForm.permissions = [...set].join(',')\n        }\n    }\n}\n</script>\n\n<style>\n.fr{\n    float:right;\n}\n.fl{\n    float:left;\n}\n.search-bar{\n    overflow: hidden;\n}\n.tools-bar{\n    margin-bottom:20px;\n}\n</style>\n"]}]}