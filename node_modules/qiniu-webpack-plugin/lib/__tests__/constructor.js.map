{"version":3,"sources":["../../src/__tests__/constructor.js"],"names":["describe","it","expect","toThrow","qiniu","require","ACCESS_KEY","SECRET_KEY","conf","toEqual","plugin","compiler","jest","fn","apply","toBeCalled","mock","calls"],"mappings":";;AAAA;;;;;;AAEAA,SAAS,aAAT,EAAwB,YAAM;AAC5BA,WAAS,aAAT,EAAwB,YAAM;AAC5BC,OAAG,wCAAH,EAA6C,YAAM;AACjDC,aAAO,YAAM;AACX,oCADW,CACQ;AACpB,OAFD,EAEGC,OAFH;AAGD,KAJD;;AAMAF,OAAG,+BAAH,EAAoC,YAAM;AACxC,UAAMG,QAAQC,QAAQ,OAAR,CAAd,CADwC,CACR;AAChC,gCAAgB,EAAEC,YAAY,GAAd,EAAmBC,YAAY,GAA/B,EAAhB,EAFwC,CAEe;AACvDL,aAAOE,MAAMI,IAAb,EAAmBC,OAAnB,CAA2B,EAAEH,YAAY,GAAd,EAAmBC,YAAY,GAA/B,EAA3B;AACD,KAJD;AAKD,GAZD;;AAcAN,KAAG,sCAAH,EAA2C,YAAM;AAC/C,QAAMS,SAAS,0BAAgB,EAAEJ,YAAY,GAAd,EAAmBC,YAAY,GAA/B,EAAhB,CAAf;AACA,QAAMI,WAAW;AACfD,cAAQE,KAAKC,EAAL;AADO,KAAjB;AAGAH,WAAOI,KAAP,CAAaH,QAAb,EAL+C,CAKvB;AACxBT,WAAOS,SAASD,MAAhB,EAAwBK,UAAxB;AACAb,WAAOS,SAASD,MAAT,CAAgBM,IAAhB,CAAqBC,KAArB,CAA2B,CAA3B,EAA8B,CAA9B,CAAP,EAAyCR,OAAzC,CAAiD,YAAjD;AACD,GARD;AASD,CAxBD","file":"constructor.js","sourcesContent":["import QiniuPlugin from '../QiniuPlugin';\n\ndescribe('QiniuPlugin', () => {\n  describe('constructor', () => {\n    it('will throw if no parameter is provided', () => {\n      expect(() => {\n        new QiniuPlugin(); // eslint-disable-line no-new\n      }).toThrow();\n    });\n\n    it('will set qiniu global options', () => {\n      const qiniu = require('qiniu'); // eslint-disable-line global-require\n      new QiniuPlugin({ ACCESS_KEY: 'a', SECRET_KEY: 's' }); // eslint-disable-line no-new\n      expect(qiniu.conf).toEqual({ ACCESS_KEY: 'a', SECRET_KEY: 's' });\n    });\n  });\n\n  it('will call plugin method when applied', () => {\n    const plugin = new QiniuPlugin({ ACCESS_KEY: 'a', SECRET_KEY: 's' });\n    const compiler = {\n      plugin: jest.fn()\n    };\n    plugin.apply(compiler); // webpack will do this\n    expect(compiler.plugin).toBeCalled();\n    expect(compiler.plugin.mock.calls[0][0]).toEqual('after-emit');\n  });\n});\n"]}